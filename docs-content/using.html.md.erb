---
title: Using Stardog Service Broker for PCF
owner: Partners
---

This topic describes how app developers use Stardog Service Broker for Pivotal Cloud Foundry (PCF).

##<a id='create'></a> Create an Instance

The Stardog Service Broker for PCF tile deploys a service broker into the PCF environment.
This service broker is then used to connect PCF apps to the Stardog
Knowledge Graphs server.

Follow the steps below to create an instance of a Stardog Service Broker for PCF service: 

1. Verify that you have the following for your pre-provisioned Stardog Knowledge Graph:
 + The URL to a pre-provisioned Stardog service<br>
   You must have admin access to a running Stardog server.
   For information about acquiring and running a Stardog server, see [Download Stardog](http://stardog.com/#download).
 + The admin username (USERNAME) and password (PASSWORD) for the pre-provisioned Stardog service


2. On a local file system, create a JSON file with the following format: 
   <pre>
    {
      "url": "URL",
      "username": "USERNAME",
      "password": "PASSWORD"
    }</pre>
   For example:
   <pre class="terminal">
    {
      "url": "http<span>:</span>//pcftile-1000000000.us-west-2.elb.amazonaws.com:5820",
      "username": "admin",
      "password": "somepassword"
    }</pre>

    For information about how to run Stardog, see the [Stardog 4: The Manual](https://docs.stardog.com/). 

3. Create a service with the following command, 
   using the file created above as the parameter file: 

    <code>cf create-service Stardog perinstance MYSERVICE -c PATH/FILENAME.json</code>

    Replace `MYSERVICE` with the name you want to identify the service in the Marketplace.<br>
    Replace `PATH/FILENAME.json` with the path and name of the configuration file created above.<br>
    For example: 
    <pre class="terminal">
    $ cf create-service Stardog perinstance stardogservice -c ~/service.json
    Creating service instance myservice in org stardog-service-broker-org / space stardog-service-broker-space as admin...
    OK </pre>

Stardog Service Broker for PCF instructs Stardog to create a new
knowledge graph and associates it with the newly created PCF service
instance.  It is now ready to be bound to PCF apps.

##<a id='bind'></a> Bind an App to a Service

There are a couple of ways to bind a PCF app to a service
instance:  

+ Use the `cf bind-service` command
+ Add a `services` stanza to the apps `manifest.yml` file

For general information about binding a service instance to an app,
see [Bind a Service Instance](https://docs.pivotal.io/pivotalcf/1-10/devguide/services/managing-services.html#bind).

When a Stardog Service Broker for PCF service instance is bound to a PCF app, a new
Stardog user is created and associated with that PCF app.

##<a id='vcap'></a> About VCAP_SERVICES

After an app is bound to a service instance, the 
connection information and credentials are available to the PCF app in the
VCAP_SERVICES environment variable.  The Stardog entry has the following
fields:

| Field               | Type      | Description
| -----               | ----      | ------------ |
| `url`               | string    | The URL of the Stardog service that is bound to the app. |
| `db_name`           | string    | The Stardog database name to which the app is bound. |
| `username`          | string    | The username credential that the app can use to connect to the Stardog database. |
| `password`          | string    | The password credential that the app can use to connect to the Stardog database. |

An example VCAP_SERVICES document is below:

 <pre class="terminal">
{"Stardog":
   [
     {"name": "stardog-service",
      "label": "Stardog",
      "tags": [],
      "plan": "shareddb",
      "credentials": {
          "db_name": "dbdbdbdbdbdbdbdbdb",
          "url": "http://somehost.com:5821",
          "password": "PasswordPasswordPassword",
          "username": "stardog1stardog"
      }
     }
   ]
} </pre>

